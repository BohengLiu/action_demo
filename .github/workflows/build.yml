name: Build/release

on: 
  push:
    tag:
      - v*
  pull_request:
    branches:
      - master

jobs:
  try_create_release:
    name: Try create release
    runs-on: ubuntu-latest
    steps:
    - name: Set output
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_REF:11})
    
    - name: Show github ref
      run: |
        echo ${{steps.vars.outputs.tag }}
        echo ${{github.event.ref}}

    - name: Create Release
      if: startsWith(github.event.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Output Release URL File
      if: startsWith(github.event.ref, 'refs/tags/')
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      if: startsWith(github.event.ref, 'refs/tags/')
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
    - name: Get Release File Name & Upload URL
      if: startsWith(github.event.ref, 'refs/tags/')
      id: get_release_info
      shell: bash
      run: |
        ls
        value=`cat release_url.txt`
        echo ::set-output name=upload_url::$value

  ubuntu:
    name: Build on Ubuntu
    needs: try_create_release
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10
      
      - name: Build
        run: |
          mkdir dist
          touch 1.txt
          touch ${{steps.vars.outputs.tag}}.txt
          ls
          echo ${{steps.vars.outputs.tag }}
          echo ${{ steps.get_release_info.outputs.upload_url }}
          
      - name: Upload Release AppImage
        # if: startsWith(github.event.ref, 'refs/tags/')
        id: upload-release-asset-AppImage
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/1.txt
          asset_name: 1.txt
          asset_content_type: application/txt
      